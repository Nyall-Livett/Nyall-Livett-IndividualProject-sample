/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 13:50:36 GMT 2024
 */

package com.iluwatar.doubledispatch;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.doubledispatch.FlamingAsteroid;
import com.iluwatar.doubledispatch.GameObject;
import com.iluwatar.doubledispatch.Meteoroid;
import com.iluwatar.doubledispatch.SpaceStationIss;
import com.iluwatar.doubledispatch.SpaceStationMir;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Meteoroid_ESTest extends Meteoroid_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(Meteoroid_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test00()  throws Throwable  {
      FlamingAsteroid flamingAsteroid0 = new FlamingAsteroid((-2900), (-2900), 0, 0);
      flamingAsteroid0.collisionResolve(flamingAsteroid0);
      assertEquals((-2900), flamingAsteroid0.getLeft());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test01()  throws Throwable  {
      FlamingAsteroid flamingAsteroid0 = new FlamingAsteroid(0, 0, 0, (-383));
      flamingAsteroid0.collision(flamingAsteroid0);
      assertEquals(0, flamingAsteroid0.getTop());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test02()  throws Throwable  {
      FlamingAsteroid flamingAsteroid0 = new FlamingAsteroid((-1512), 0, (-1512), (-1512));
      // Undeclared exception!
      try { 
        flamingAsteroid0.collisionResolve((SpaceStationMir) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.doubledispatch.Meteoroid", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test03()  throws Throwable  {
      Meteoroid meteoroid0 = new Meteoroid((-1289), (-1289), (-1289), (-1289));
      // Undeclared exception!
      try { 
        meteoroid0.collisionResolve((SpaceStationIss) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.doubledispatch.Meteoroid", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test04()  throws Throwable  {
      FlamingAsteroid flamingAsteroid0 = new FlamingAsteroid(0, 0, 0, 0);
      // Undeclared exception!
      try { 
        flamingAsteroid0.collisionResolve((Meteoroid) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.doubledispatch.Meteoroid", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test05()  throws Throwable  {
      FlamingAsteroid flamingAsteroid0 = new FlamingAsteroid((-2900), (-2900), 0, 0);
      // Undeclared exception!
      try { 
        flamingAsteroid0.collision((GameObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.doubledispatch.FlamingAsteroid", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test06()  throws Throwable  {
      Meteoroid meteoroid0 = new Meteoroid(0, 0, 0, (-1));
      FlamingAsteroid flamingAsteroid0 = new FlamingAsteroid(0, 0, 0, (-383));
      meteoroid0.collisionResolve((Meteoroid) flamingAsteroid0);
      assertEquals(0, meteoroid0.getLeft());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test07()  throws Throwable  {
      Meteoroid meteoroid0 = new Meteoroid(0, 0, 4, 0);
      SpaceStationIss spaceStationIss0 = new SpaceStationIss(1147, 0, 0, 0);
      meteoroid0.collisionResolve((SpaceStationMir) spaceStationIss0);
      assertFalse(spaceStationIss0.isDamaged());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test08()  throws Throwable  {
      Meteoroid meteoroid0 = new Meteoroid(0, 0, 0, (-1));
      meteoroid0.collision(meteoroid0);
      assertFalse(meteoroid0.isDamaged());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test09()  throws Throwable  {
      Meteoroid meteoroid0 = new Meteoroid((-3048), (-3048), 1, (-1546));
      // Undeclared exception!
      try { 
        meteoroid0.collisionResolve((FlamingAsteroid) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.doubledispatch.Meteoroid", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test10()  throws Throwable  {
      Meteoroid meteoroid0 = new Meteoroid(3, 3, 3, 3);
      SpaceStationIss spaceStationIss0 = new SpaceStationIss(1883, 1883, 1883, (-1249));
      meteoroid0.collisionResolve(spaceStationIss0);
      assertEquals((-1249), spaceStationIss0.getBottom());
  }
}
