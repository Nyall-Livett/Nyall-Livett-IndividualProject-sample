/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 13:26:57 GMT 2024
 */

package com.iluwatar.bridge;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.bridge.Enchantment;
import com.iluwatar.bridge.FlyingEnchantment;
import com.iluwatar.bridge.SoulEatingEnchantment;
import com.iluwatar.bridge.Sword;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

 
public class Sword_ESTest  {


  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      Sword sword0 = new Sword((Enchantment) null);
      Enchantment enchantment0 = sword0.getEnchantment();
      assertNull(enchantment0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      Sword sword0 = new Sword((Enchantment) null);
      // Undeclared exception!
      try { 
        sword0.wield();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.bridge.Sword", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      Sword sword0 = new Sword((Enchantment) null);
      // Undeclared exception!
      try { 
        sword0.unwield();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.bridge.Sword", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      Sword sword0 = new Sword((Enchantment) null);
      // Undeclared exception!
      try { 
        sword0.swing();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.bridge.Sword", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      SoulEatingEnchantment soulEatingEnchantment0 = new SoulEatingEnchantment();
      Sword sword0 = new Sword(soulEatingEnchantment0);
      Enchantment enchantment0 = sword0.getEnchantment();
      assertSame(soulEatingEnchantment0, enchantment0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test5()  throws Throwable  {
      SoulEatingEnchantment soulEatingEnchantment0 = new SoulEatingEnchantment();
      Sword sword0 = new Sword(soulEatingEnchantment0);
      sword0.unwield();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test6()  throws Throwable  {
      FlyingEnchantment flyingEnchantment0 = new FlyingEnchantment();
      Sword sword0 = new Sword(flyingEnchantment0);
      sword0.swing();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test7()  throws Throwable  {
      FlyingEnchantment flyingEnchantment0 = new FlyingEnchantment();
      Sword sword0 = new Sword(flyingEnchantment0);
      sword0.wield();
  }
}
