/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 15:51:53 GMT 2024
 */

package com.iluwatar.strangler;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.strangler.OldSource;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OldSource_ESTest extends OldSource_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(OldSource_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      OldSource oldSource0 = new OldSource();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      int int0 = oldSource0.accumulateSum(intArray0);
      assertEquals(1, int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      OldSource oldSource0 = new OldSource();
      int[] intArray0 = new int[1];
      intArray0[0] = (-916);
      int int0 = oldSource0.accumulateSum(intArray0);
      assertEquals((-916), int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      OldSource oldSource0 = new OldSource();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = (-1729);
      intArray0[2] = (-406);
      intArray0[3] = 104;
      int int0 = oldSource0.accumulateMul(intArray0);
      assertEquals(73005296, int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      OldSource oldSource0 = new OldSource();
      int[] intArray0 = new int[1];
      intArray0[0] = (-916);
      int int0 = oldSource0.accumulateMul(intArray0);
      assertEquals((-916), int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      OldSource oldSource0 = new OldSource();
      // Undeclared exception!
      try { 
        oldSource0.accumulateSum((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.strangler.OldSource", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test5()  throws Throwable  {
      OldSource oldSource0 = new OldSource();
      // Undeclared exception!
      try { 
        oldSource0.accumulateMul((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.strangler.OldSource", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test6()  throws Throwable  {
      OldSource oldSource0 = new OldSource();
      int[] intArray0 = new int[1];
      int int0 = oldSource0.accumulateMul(intArray0);
      assertEquals(0, int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test7()  throws Throwable  {
      OldSource oldSource0 = new OldSource();
      int[] intArray0 = new int[1];
      int int0 = oldSource0.accumulateSum(intArray0);
      assertEquals(0, int0);
  }
}
