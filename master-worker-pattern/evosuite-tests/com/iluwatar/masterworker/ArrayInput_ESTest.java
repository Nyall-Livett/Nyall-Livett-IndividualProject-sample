/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 16:46:21 GMT 2024
 */

package com.iluwatar.masterworker;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.masterworker.ArrayInput;
import com.iluwatar.masterworker.Input;
import java.util.List;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ArrayInput_ESTest extends ArrayInput_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(ArrayInput_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      int[][] intArray0 = new int[0][8];
      ArrayInput arrayInput0 = new ArrayInput(intArray0);
      List<Input<int[][]>> list0 = arrayInput0.divideData(1);
      assertEquals(0, list0.size());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArrayInput.makeDivisions((int[][]) null, 28);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.masterworker.ArrayInput", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      int[][] intArray0 = new int[1][4];
      // Undeclared exception!
      try { 
        ArrayInput.makeDivisions(intArray0, (-1123));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1123
         //
         verifyException("com.iluwatar.masterworker.ArrayInput", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      int[][] intArray0 = new int[3][4];
      // Undeclared exception!
      try { 
        ArrayInput.makeDivisions(intArray0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.iluwatar.masterworker.ArrayInput", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      int[][] intArray0 = new int[5][4];
      ArrayInput arrayInput0 = new ArrayInput(intArray0);
      // Undeclared exception!
      try { 
        arrayInput0.divideData((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("com.iluwatar.masterworker.ArrayInput", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test5()  throws Throwable  {
      int[][] intArray0 = new int[3][4];
      ArrayInput arrayInput0 = new ArrayInput(intArray0);
      // Undeclared exception!
      try { 
        arrayInput0.divideData(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.iluwatar.masterworker.ArrayInput", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test6()  throws Throwable  {
      int[][] intArray0 = new int[4][2];
      ArrayInput arrayInput0 = new ArrayInput(intArray0);
      List<Input<int[][]>> list0 = arrayInput0.divideData(4463);
      assertEquals(4, list0.size());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test7()  throws Throwable  {
      ArrayInput arrayInput0 = new ArrayInput((int[][]) null);
      List<Input<int[][]>> list0 = arrayInput0.divideData(275);
      assertNull(list0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test8()  throws Throwable  {
      int[][] intArray0 = new int[3][4];
      int[] intArray1 = ArrayInput.makeDivisions(intArray0, 1);
      assertArrayEquals(new int[] {3}, intArray1);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test9()  throws Throwable  {
      int[][] intArray0 = new int[4][2];
      ArrayInput arrayInput0 = new ArrayInput(intArray0);
      List<Input<int[][]>> list0 = arrayInput0.divideData(3);
      assertEquals(3, list0.size());
  }
}
