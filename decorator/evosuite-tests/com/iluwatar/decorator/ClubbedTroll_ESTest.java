/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 16:13:09 GMT 2024
 */

package com.iluwatar.decorator;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.decorator.ClubbedTroll;
import com.iluwatar.decorator.SimpleTroll;
import com.iluwatar.decorator.Troll;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ClubbedTroll_ESTest extends ClubbedTroll_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(ClubbedTroll_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      SimpleTroll simpleTroll0 = new SimpleTroll();
      ClubbedTroll clubbedTroll0 = new ClubbedTroll(simpleTroll0);
      clubbedTroll0.fleeBattle();
      assertEquals(20, clubbedTroll0.getAttackPower());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      ClubbedTroll clubbedTroll0 = new ClubbedTroll((Troll) null);
      // Undeclared exception!
      try { 
        clubbedTroll0.getAttackPower();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.decorator.ClubbedTroll", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      ClubbedTroll clubbedTroll0 = new ClubbedTroll((Troll) null);
      // Undeclared exception!
      try { 
        clubbedTroll0.attack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.decorator.ClubbedTroll", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      SimpleTroll simpleTroll0 = new SimpleTroll();
      ClubbedTroll clubbedTroll0 = new ClubbedTroll(simpleTroll0);
      clubbedTroll0.attack();
      assertEquals(20, clubbedTroll0.getAttackPower());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      SimpleTroll simpleTroll0 = new SimpleTroll();
      ClubbedTroll clubbedTroll0 = new ClubbedTroll(simpleTroll0);
      int int0 = clubbedTroll0.getAttackPower();
      assertEquals(20, int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test5()  throws Throwable  {
      ClubbedTroll clubbedTroll0 = new ClubbedTroll((Troll) null);
      // Undeclared exception!
      try { 
        clubbedTroll0.fleeBattle();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.decorator.ClubbedTroll", e);
      }
  }
}
