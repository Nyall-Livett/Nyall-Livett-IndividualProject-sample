/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 13:58:09 GMT 2024
 */

package com.iluwatar.mute;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.mute.CheckedRunnable;
import com.iluwatar.mute.Mute;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Mute_ESTest extends Mute_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(Mute_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      CheckedRunnable checkedRunnable0 = mock(CheckedRunnable.class, new ViolatedAssumptionAnswer());
      Mute.mute(checkedRunnable0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      Mute.loggedMute((CheckedRunnable) null);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      CheckedRunnable checkedRunnable0 = mock(CheckedRunnable.class, new ViolatedAssumptionAnswer());
      Mute.loggedMute(checkedRunnable0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mute.mute((CheckedRunnable) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // java.lang.NullPointerException
         //
      }
  }
}
