/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 14:56:21 GMT 2024
 */

package com.iluwatar.parameter.object;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.parameter.object.ParameterObject;
import com.iluwatar.parameter.object.SearchService;
import com.iluwatar.parameter.object.SortOrder;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.jupiter.api.extension.RegisterExtension;

 
public class SearchService_ESTest  {


  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      SearchService searchService0 = new SearchService();
      String string0 = searchService0.search("", "");
      assertEquals("Requesting shoes of type \"\" sorted by \"\" in \"ascending\" order..", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      SearchService searchService0 = new SearchService();
      // Undeclared exception!
      try { 
        searchService0.search("e", (SortOrder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.parameter.object.SearchService", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      SearchService searchService0 = new SearchService();
      ParameterObject parameterObject0 = mock(ParameterObject.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(parameterObject0).getSortBy();
      doReturn((SortOrder) null).when(parameterObject0).getSortOrder();
      doReturn((String) null).when(parameterObject0).getType();
      // Undeclared exception!
      try { 
        searchService0.search(parameterObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.parameter.object.SearchService", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      SearchService searchService0 = new SearchService();
      SortOrder sortOrder0 = SortOrder.DESC;
      String string0 = searchService0.search("asc", sortOrder0);
      assertEquals("Requesting shoes of type \"asc\" sorted by \"price\" in \"descending\" order..", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      SearchService searchService0 = new SearchService();
      ParameterObject parameterObject0 = mock(ParameterObject.class, new ViolatedAssumptionAnswer());
      ParameterObject parameterObject1 = mock(ParameterObject.class, new ViolatedAssumptionAnswer());
      doReturn("price").when(parameterObject1).getSortBy();
      doReturn(parameterObject0.DEFAULT_SORT_ORDER).when(parameterObject1).getSortOrder();
      doReturn("price").when(parameterObject1).getType();
      String string0 = searchService0.search(parameterObject1);
      assertEquals("Requesting shoes of type \"price\" sorted by \"price\" in \"ascending\" order..", string0);
  }
}
