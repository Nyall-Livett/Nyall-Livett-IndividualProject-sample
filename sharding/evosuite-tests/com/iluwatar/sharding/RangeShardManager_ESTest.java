/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 13:48:44 GMT 2024
 */

package com.iluwatar.sharding;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.sharding.Data;
import com.iluwatar.sharding.RangeShardManager;
import com.iluwatar.sharding.Shard;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RangeShardManager_ESTest extends RangeShardManager_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(RangeShardManager_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      RangeShardManager rangeShardManager0 = new RangeShardManager();
      Data.DataType data_DataType0 = Data.DataType.TYPE_2;
      Shard shard0 = new Shard(2);
      rangeShardManager0.addNewShard(shard0);
      Data data0 = new Data((-12), "`hvbT@hnx", data_DataType0);
      int int0 = rangeShardManager0.storeData(data0);
      assertEquals(2, int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      RangeShardManager rangeShardManager0 = new RangeShardManager();
      // Undeclared exception!
      try { 
        rangeShardManager0.allocateShard((Data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.sharding.RangeShardManager", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      RangeShardManager rangeShardManager0 = new RangeShardManager();
      Data.DataType data_DataType0 = Data.DataType.TYPE_3;
      Data data0 = new Data(0, "com.iluwatar.sharding.Data", data_DataType0);
      int int0 = rangeShardManager0.allocateShard(data0);
      assertEquals(3, int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      RangeShardManager rangeShardManager0 = new RangeShardManager();
      Data.DataType data_DataType0 = Data.DataType.TYPE_2;
      Data data0 = new Data((-12), "`hvbT@hnx", data_DataType0);
      // Undeclared exception!
      try { 
        rangeShardManager0.storeData(data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.sharding.RangeShardManager", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      RangeShardManager rangeShardManager0 = new RangeShardManager();
      Data.DataType data_DataType0 = Data.DataType.TYPE_1;
      Data data0 = new Data(1, "`hvbT@hnx", data_DataType0);
      // Undeclared exception!
      try { 
        rangeShardManager0.storeData(data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.sharding.RangeShardManager", e);
      }
  }
}
