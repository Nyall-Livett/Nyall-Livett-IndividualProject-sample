/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 13:34:44 GMT 2024
 */

package com.iluwatar.featuretoggle.user;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.featuretoggle.user.User;
import com.iluwatar.featuretoggle.user.UserGroup;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UserGroup_ESTest extends UserGroup_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(UserGroup_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      boolean boolean0 = UserGroup.isPaid((User) null);
      assertFalse(boolean0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      User user0 = new User("User already member of paid group.");
      boolean boolean0 = UserGroup.isPaid(user0);
      assertFalse(boolean0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      User user0 = new User("User already member of paid group.");
      UserGroup.addUserToPaidGroup(user0);
      UserGroup.addUserToPaidGroup(user0);
      assertEquals("User already member of paid group.", user0.toString());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      User user0 = new User("6Ea4`kr}mpGBM");
      UserGroup.addUserToFreeGroup(user0);
      UserGroup.addUserToFreeGroup(user0);
      assertEquals("6Ea4`kr}mpGBM", user0.toString());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      UserGroup.addUserToFreeGroup((User) null);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test5()  throws Throwable  {
      User user0 = new User("");
      UserGroup.addUserToFreeGroup(user0);
      try { 
        UserGroup.addUserToPaidGroup(user0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // User already member of free group.
         //
         verifyException("com.iluwatar.featuretoggle.user.UserGroup", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test6()  throws Throwable  {
      UserGroup userGroup0 = new UserGroup();
  }
}
