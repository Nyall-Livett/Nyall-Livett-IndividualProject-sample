/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 15:07:57 GMT 2024
 */

package com.iluwatar.hexagonal.database;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import com.iluwatar.hexagonal.database.InMemoryTicketRepository;
import com.iluwatar.hexagonal.domain.LotteryNumbers;
import com.iluwatar.hexagonal.domain.LotteryTicket;
import com.iluwatar.hexagonal.domain.LotteryTicketId;
import com.iluwatar.hexagonal.domain.PlayerDetails;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Optional;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class InMemoryTicketRepository_ESTest extends InMemoryTicketRepository_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(InMemoryTicketRepository_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      PlayerDetails playerDetails0 = new PlayerDetails("com.iluwatar.hexagonal.domain.LotteryTicket", "com.iluwatar.hexagonal.domain.LotteryTicket", "com.iluwatar.hexagonal.domain.LotteryTicket");
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      LotteryNumbers lotteryNumbers0 = LotteryNumbers.create(linkedHashSet0);
      LotteryTicket lotteryTicket0 = new LotteryTicket(lotteryTicketId0, playerDetails0, lotteryNumbers0);
      Optional<LotteryTicketId> optional0 = inMemoryTicketRepository0.save(lotteryTicket0);
      assertNotNull(optional0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      inMemoryTicketRepository0.deleteAll();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      Map<LotteryTicketId, LotteryTicket> map0 = inMemoryTicketRepository0.findAll();
      assertTrue(map0.isEmpty());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      Optional<LotteryTicket> optional0 = inMemoryTicketRepository0.findById(lotteryTicketId0);
      assertNotNull(optional0);
  }
}
