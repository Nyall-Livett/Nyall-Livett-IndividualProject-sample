/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 16:16:42 GMT 2024
 */

package com.iluwatar.servicetoworker;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.servicetoworker.Command;
import com.iluwatar.servicetoworker.Dispatcher;
import com.iluwatar.servicetoworker.GiantController;
import com.iluwatar.servicetoworker.GiantModel;
import com.iluwatar.servicetoworker.GiantView;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GiantController_ESTest extends GiantController_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(GiantController_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      Dispatcher dispatcher0 = new Dispatcher((GiantView) null);
      GiantController giantController0 = new GiantController(dispatcher0);
      // Undeclared exception!
      try { 
        giantController0.setCommand((Command) null, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      GiantController giantController0 = new GiantController((Dispatcher) null);
      // Undeclared exception!
      try { 
        giantController0.updateView((GiantModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.servicetoworker.GiantController", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      GiantController giantController0 = new GiantController((Dispatcher) null);
      // Undeclared exception!
      try { 
        giantController0.setCommand((Command) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iluwatar.servicetoworker.GiantController", e);
      }
  }
}
