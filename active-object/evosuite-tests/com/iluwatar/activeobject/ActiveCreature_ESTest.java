/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 16 14:32:04 GMT 2024
 */

package com.iluwatar.activeobject;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import com.iluwatar.activeobject.Orc;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ActiveCreature_ESTest extends ActiveCreature_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(ActiveCreature_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      Orc orc0 = new Orc((String) null);
      orc0.name();
      assertEquals(0, orc0.getStatus());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      Orc orc0 = new Orc("LAj45/owyL^z=]!");
      orc0.name();
      assertEquals(0, orc0.getStatus());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      Orc orc0 = new Orc("Thread was interrupted. --> {}");
      orc0.kill((-2409));
      int int0 = orc0.getStatus();
      assertEquals((-2409), int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      Orc orc0 = new Orc("");
      orc0.roam();
      assertEquals(0, orc0.getStatus());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      Orc orc0 = new Orc("");
      orc0.kill(542);
      int int0 = orc0.getStatus();
      assertEquals(542, int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test5()  throws Throwable  {
      Orc orc0 = new Orc("");
      int int0 = orc0.getStatus();
      assertEquals(0, int0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test6()  throws Throwable  {
      Orc orc0 = new Orc("");
      orc0.eat();
      assertEquals(0, orc0.getStatus());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test7()  throws Throwable  {
      Orc orc0 = new Orc("");
      orc0.name();
      assertEquals(0, orc0.getStatus());
  }
}
